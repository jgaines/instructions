#!/bin/bash

# Script to gather copilot-instructions.md, GEMINI.md, and AGENTS.md files from other repositories
# Following project instructions for Jujutsu workflow

set -e

echo "Gathering copilot-instructions.md, GEMINI.md, and AGENTS.md files from other repositories..."

# Check if active revset is empty
if [[ -n $(jj diff -s) ]]; then
    echo "Active revset is not empty, creating new revset..."
    jj new
fi

# Create the 'from' directory if it doesn't exist
mkdir -p from

# Find all target files
echo "Searching for copilot-instructions.md, GEMINI.md, and AGENTS.md files..."

# Build list of existing directories to search
search_dirs=()
for dir in ~/bin ~/git ~/projects; do
    if [[ -d "$dir" ]]; then
        search_dirs+=("$dir")
    fi
done

if [[ ${#search_dirs[@]} -eq 0 ]]; then
    echo "No search directories found (~/bin, ~/git, ~/projects)"
    exit 0
fi

echo "Searching in directories: ${search_dirs[*]}"

# Search for copilot-instructions.md files in .github directories
copilot_files=$(fd -H copilot-instructions.md "${search_dirs[@]}" | grep .github || true)

# Search for GEMINI.md files anywhere (excluding the from directory to avoid copying to itself)
gemini_files=$(fd -H GEMINI.md "${search_dirs[@]}" | grep -v "/from/" || true)

# Search for AGENTS.md files anywhere (excluding the from directory to avoid copying to itself)
agents_files=$(fd -H AGENTS.md "${search_dirs[@]}" | grep -v "/from/" || true)

# Combine all files
all_files=""
if [[ -n "$copilot_files" ]]; then
    all_files="$copilot_files"
fi
if [[ -n "$gemini_files" ]]; then
    if [[ -n "$all_files" ]]; then
        all_files="$all_files"$'\n'"$gemini_files"
    else
        all_files="$gemini_files"
    fi
fi
if [[ -n "$agents_files" ]]; then
    if [[ -n "$all_files" ]]; then
        all_files="$all_files"$'\n'"$agents_files"
    else
        all_files="$agents_files"
    fi
fi

if [[ -z "$all_files" ]]; then
    echo "No target files found in ~/bin, ~/git, or ~/projects"
    exit 0
fi

echo "Found files:"
echo "$all_files"
echo

# Process each file
while IFS= read -r file; do
    if [[ -n "$file" ]]; then
        # Get the filename
        filename=$(basename "$file")
        
        # Extract repository name from path
        if [[ "$filename" == "copilot-instructions.md" ]]; then
            # For copilot-instructions.md, remove the .github/copilot-instructions.md part
            repo_path=$(dirname "$(dirname "$file")")
        else
            # For GEMINI.md and AGENTS.md, remove the filename part
            repo_path=$(dirname "$file")
        fi
        repo_name=$(basename "$repo_path")

        echo "Processing: $file"
        echo "Repository: $repo_name"
        echo "Filename: $filename"

        # Create directory for this repo
        target_dir="from/$repo_name"
        mkdir -p "$target_dir"

        # Copy the file with its original name (skip if it's the same file)
        target_path="$target_dir/$filename"
        if [[ "$(realpath "$file")" != "$(realpath "$target_path" 2>/dev/null || echo "$target_path")" ]]; then
            cp "$file" "$target_dir/$filename"
        else
            echo "Skipping (same file): $file"
            continue
        fi

        echo "Copied to: $target_dir/$filename"
        echo
    fi
done <<< "$all_files"

# Set description for the revset if it's not empty
if [[ -n $(jj diff -s) ]]; then
    jj desc -m "Update instructions with gather script"
    echo "Gathering complete! Files copied to 'from' directory organized by repository name."
    echo "revset created with description: 'Update instructions with gather script'"
else
    echo "No changes to commit, revset remains empty."
fi
